# This workflow generates the Windows installer (MSI)
# It must be executed manually
name: Build the MSI Package

on:
  # push:
  #   branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install dependencies
      - name: Install dependencies on Windows
        run: |
          choco install cmake -y
          cmake --version
          choco install wixtoolset -y
          choco install wxwidgets -y
          # Add WiX to PATH for this step and subsequent steps
          $wixPath = (Get-ChildItem "C:\Program Files (x86)\WiX Toolset v*" | Sort-Object LastWriteTime -Descending | Select-Object -First 1).FullName
          echo "$wixPath\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # Configure CMake
      - name: Configure CMake
        run: |
          mkdir build
          cd build
          # Find wxWidgets installation
          $wxwin = (Get-ChildItem "C:\Program Files\wxWidgets*" | Sort-Object LastWriteTime -Descending | Select-Object -First 1).FullName
          Write-Host "Using wxWidgets path: $wxwin"
          cmake .. -G "Visual Studio 17 2022" -A x64 -DwxWidgets_ROOT_DIR="$wxwin" -DwxWidgets_USE_LIBS="core;base;html"
        working-directory: ${{ github.workspace }}

      # Build CMake project
      - name: Build CMake project
        run: cmake --build . --config Release
        working-directory: ${{ github.workspace }}/build

      # Generate the MSI package
      - name: Generate the MSI package
        run: |
          # Set WIXTARGETS environment variable for MSBuild
          $wixPath = (Get-ChildItem "C:\Program Files (x86)\WiX Toolset v*" | Sort-Object LastWriteTime -Descending | Select-Object -First 1).FullName
          echo "WIXTARGETS=$wixPath\Wix.targets" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          msbuild agrilla.wixproj /p:Configuration=Release
        working-directory: ${{ github.workspace }}

      # Upload MSI artifact
      - name: Upload MSI package
        uses: actions/upload-artifact@v4
        with:
          name: agrilla-msi-installer
          path: bin/Release/agrilla.msi

